{"version":3,"sources":["redux/phonebook/phonedook-types.js","redux/phonebook/phonebook-actions.js","components/contactsList/ContactList.styled.jsx","components/contactsList/ContactList.jsx","components/contactsForm/ContactForm.styled.jsx","components/contactsForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/App/Title.styled.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/App.js","index.js"],"names":["name","number","type","types","payload","id","uuidv4","contactId","value","Button","styled","button","List","ul","Name","p","Item","li","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","connect","phonebook","contacts","dispatch","onDeleteContacts","phonebookActions","map","onClick","Form","form","Label","label","Input","input","onSubmit","useState","setName","setNumber","nameId","telId","handleChange","e","target","preventDefault","htmlFor","pattern","title","required","onChange","state","event","onBlur","Title","h2","combineReducers","find","alert","rootReducer","phonebookReducer","store","createStore","composeWithDevTools","App","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98e68fa9.chunk.js","sourcesContent":["export default {\n  ADD: 'phonebook/Add',\n  DELETE: 'phonebook/Delete',\n  CHANGE_FILTER: 'phonebook/Filter',\n};\n","import types from './phonedook-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst newContact = (name, number) => ({\n  type: types.ADD,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n});\n\nconst deleteContacts = contactId => ({\n  type: types.DELETE,\n  payload: contactId,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { newContact, deleteContacts, changeFilter };\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Name = styled.p`\n  display: block;\n  padding: 0 15px;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  border-radius: 20px;\n  margin-bottom: 10px;\n  background: rgba(255, 255, 255, 0.2);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nimport { Button, List, Name, Item } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <Item key={id}>\n        <Name>\n          {name} : {number}\n        </Name>\n        <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\n      </Item>\n    ))}\n  </List>\n);\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getFilteredContacts(contacts, filter),\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  onDeleteContacts: id => dispatch(phonebookActions.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onConDeleteContactshange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 103%;\n  margin: 40px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameId}\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor={telId}>\n        Telephone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={telId}\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add to contacts</Button>\n    </Form>\n  );\n}\nconst mapStateToProps = state => ({});\n\nconst mapDispatchtoProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(phonebookActions.newContact(name, number)),\n});\n\nexport default connect(null, mapDispatchtoProps)(ContactForm);\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\n\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ value, onChange, onBlur }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\n    </Label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  onChange: event => dispatch(phonebookActions.changeFilter(event.target.value)),\n  onBlur: () => dispatch(phonebookActions.changeFilter('')),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 34px;\n`;\n","import { unstable_concurrentAct } from 'react-dom/test-utils';\nimport { combineReducers } from 'redux';\nimport types from './phonedook-types';\n\nconst contacts = (\n  state = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  { type, payload },\n) => {\n  switch (type) {\n    case types.ADD:\n      if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\n        alert(`${payload.name} is already in contacts`);\n        return state;\n      }\n      return [payload, ...state];\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ contacts, filter });\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst rootReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './contactsList/ContactList';\nimport ContactForm from './contactsForm/ContactForm';\nimport Filter from './filter/Filter';\nimport { Title } from './App/Title.styled';\nimport store from '../redux/store';\n\nconsole.log(store.getState());\n\nexport default function App() {\n  // useEffect(() => {\n  //   const currentContacts = JSON.parse(localStorage.getItem('contacts')) ?? '';\n  //   currentContacts && setContacts(currentContacts);\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}