{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selector.js","components/contactsList/ContactList.styled.jsx","components/contactsList/ContactList.jsx","components/contactsForm/ContactForm.styled.jsx","components/contactsForm/ContactForm.jsx","components/filter/Filter.styled.jsx","components/filter/Filter.jsx","components/App/Title.styled.js","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["newContact","createAction","name","number","payload","id","uuidv4","deleteContacts","changeFilter","getFilter","state","phonebook","filter","getFilteredContacts","contacts","getContacts","normalizedFilter","toLowerCase","contact","includes","Button","styled","button","List","ul","Name","p","Item","li","ContactList","useSelector","dispatch","useDispatch","map","onClick","onDeleteContacts","Form","form","Label","label","Input","input","ContactForm","useState","setName","setNumber","nameId","telId","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","type","pattern","title","required","onChange","Filter","event","onBlur","Title","h2","App","createReducer","find","alert","_","combineReducers","persistConfig","key","storage","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"sQAGaA,EAAaC,YAAa,iBAAiB,SAACC,EAAMC,GAAP,MAAmB,CACzEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAISI,EAAiBN,YAAa,oBAE9BO,EAAeP,YAAa,0BCZ5BQ,EAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QACrCC,EAAsB,SAAAH,GACjC,IAAMI,EAHmB,SAAAJ,GAAK,OAAIA,EAAMC,UAAUG,SAGjCC,CAAYL,GAEvBM,EADSP,EAAUC,GACOO,cAChC,OAAOH,EAASF,QAAO,SAAAM,GAAO,OAAIA,EAAQhB,KAAKe,cAAcE,SAASH,O,cCJ3DI,EAASC,IAAOC,OAAV,sSAaNC,EAAOF,IAAOG,GAAV,qJAQJC,EAAOJ,IAAOK,EAAV,8IAQJC,EAAON,IAAOO,GAAV,wP,OCLFC,EAnBK,WAClB,IAAMf,EAAWgB,YAAYjB,GACvBkB,EAAWC,cAGjB,OACE,cAACT,EAAD,UACGT,EAASmB,KAAI,gBAAG5B,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACwB,EAAD,WACE,eAACF,EAAD,WACGvB,EADH,MACYC,KAEZ,cAACiB,EAAD,CAAQc,QAAS,kBATA,SAAA7B,GAAE,OAAI0B,EAASxB,EAAeF,IASxB8B,CAAiB9B,IAAxC,sBAJSA,S,QCbN+B,EAAOf,IAAOgB,KAAV,gIAOJC,EAAQjB,IAAOkB,MAAV,wJAQLC,EAAQnB,IAAOoB,MAAV,uUAcLrB,EAASC,IAAOC,OAAV,wTCyCJoB,I,MAAAA,EAlER,WACP,IAAMX,EAAWC,cAGf,EAAwBW,mBAAS,IAAjC,mBAAOzC,EAAP,KAAa0C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOxC,EAAP,KAAe0C,EAAf,KAEMC,EAASxC,cACTyC,EAAQzC,cAER0C,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBhD,EAAR,EAAQA,KAAMiD,EAAd,EAAcA,MACd,OAAQjD,GACN,IAAK,OACH0C,EAAQO,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,SAWN,OACE,eAACf,EAAD,CAAMgB,SARa,SAAAH,GACnBA,EAAEI,iBAvBW,SAACnD,EAAMC,GAAW4B,EAAS/B,EAAWE,EAAMC,IAwBzDiD,CAASlD,EAAMC,GACfyC,EAAQ,IACRC,EAAU,KAIV,UACE,eAACP,EAAD,CAAOgB,QAASR,EAAhB,iBAEE,cAACN,EAAD,CACEe,KAAK,OACLrD,KAAK,OACLsD,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRrD,GAAIyC,EACJK,MAAOjD,EACPyD,SAAUX,OAId,eAACV,EAAD,CAAOgB,QAASP,EAAhB,sBAEE,cAACP,EAAD,CACEe,KAAK,MACLrD,KAAK,SACLsD,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRrD,GAAI0C,EACJI,MAAOhD,EACPwD,SAAUX,OAGd,cAAC,EAAD,CAAQO,KAAK,SAAb,iCChEOjB,EAAQjB,IAAOkB,MAAV,wNAWLC,EAAQnB,IAAOoB,MAAV,uUCSHmB,EAfA,WACb,IAAMT,EAAQrB,YAAYrB,GACpBsB,EAAWC,cAKjB,OACE,eAAC,EAAD,mCAEE,cAAC,EAAD,CAAOuB,KAAK,OAAOJ,MAAOA,EAAOQ,SANpB,SAAAE,GAAK,OAAI9B,EAASvB,EAAaqD,EAAMX,OAAOC,SAMJW,OAL1C,kBAAM/B,EAASvB,EAAa,YCVhCuD,EAAQ1C,IAAO2C,GAAV,wNCGH,SAASC,IACtB,OACE,gCACE,cAACF,EAAD,wBACA,cAAC,EAAD,IACA,cAACA,EAAD,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,O,qDCRAjD,EAAWoD,YACf,CACE,CAAE7D,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALpB,mBAQzBH,GAAa,SAACU,EAAD,GAAyB,IAAfN,EAAc,EAAdA,QACtB,OAAIM,EAAMyD,MAAK,SAAAjD,GAAO,OAAIA,EAAQhB,KAAKe,gBAAkBb,EAAQF,KAAKe,kBACpEmD,MAAM,GAAD,OAAIhE,EAAQF,KAAZ,4BACEQ,GAEH,CAAEN,GAAR,mBAAoBM,OAbI,cAezBH,GAAiB,SAACG,EAAD,OAAUN,EAAV,EAAUA,QAAV,OAAwBM,EAAME,QAAO,qBAAGP,KAAgBD,QAfhD,IAmBxBQ,GAASsD,YAAc,GAAD,eACzB1D,GAAe,SAAC6D,EAAD,YAAMjE,YAGTkE,eAAgB,CAAExD,WAAUF,YCbrC2D,GAAgB,CACpBC,IAAK,OACLC,aAGIC,GAAcJ,YAAgB,CAClC3D,UAAWgE,KAGPC,GAAmBC,YAAeN,GAAeG,IAE1CI,GAAQC,YAAe,CAClCC,QAASJ,GACTK,UAAUC,EACVC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,WAKrDC,GAAYC,YAAahB,IC5BtCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnB,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaoB,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC5B,EAAD,UAINkC,SAASC,eAAe,W","file":"static/js/main.1bcec802.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const newContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContacts = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Name = styled.p`\n  display: block;\n  padding: 0 15px;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  border-radius: 20px;\n  margin-bottom: 10px;\n  background: rgba(255, 255, 255, 0.2);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {deleteContacts} from '../../redux/phonebook/phonebook-actions';\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selector';\nimport { Button, List, Name, Item } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDeleteContacts = id => dispatch(deleteContacts(id));\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Name>\n            {name} : {number}\n          </Name>\n          <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContacts: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 103%;\n  margin: 40px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport {newContact} from '../../redux/phonebook/phonebook-actions';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport function ContactForm() {\nconst dispatch = useDispatch();\nconst onSubmit = (name, number) => dispatch(newContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameId}\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor={telId}>\n        Telephone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={telId}\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add to contacts</Button>\n    </Form>\n  );\n}\n\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selector';\nimport {changeFilter} from '../../redux/phonebook/phonebook-actions';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(changeFilter(event.target.value));\n  const onBlur = () => dispatch(changeFilter(''));\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 34px;\n`;\n","import ContactList from './contactsList/ContactList';\nimport ContactForm from './contactsForm/ContactForm';\nimport Filter from './filter/Filter';\nimport { Title } from './App/Title.styled';\n\nexport default function App() {\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {deleteContacts, newContact, changeFilter} from './phonebook-actions';\n\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [newContact]: (state, { payload }) => {\n      if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\n        alert(`${payload.name} is already in contacts`);\n        return state;\n      }\n      return [payload, ...state];\n    },\n    [deleteContacts]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ contacts, filter });\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport {store, persistor} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}